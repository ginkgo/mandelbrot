#version 430

layout (local_size_x = 4, local_size_y = 16) in;

uniform int batch_size;
uniform int batch_offset;

buffer stack_min
{
    vec2 smin[];
};

buffer stack_max
{
    vec2 smax[];
};

buffer stack_pid
{
    uint spid[];
};

buffer vertex_buffer
{
    vec4 vbuffer[];
};

void main (void)
{
    const vec2 intp[4] = {vec2(0,0), vec2(1,0), vec2(1,1), vec2(0,1)};

    uint vid = gl_GlobalInvocationID.x;
    uint bid = gl_GlobalInvocationID.y;
    uint sid = bid + uint(batch_offset);

    if (bid < batch_size) {
        uint rpid = spid[sid];
        vec2 rmin = smin[sid];
        vec2 rmax = smax[sid];

        vec2 i = intp[vid];
        vec2 p = mix(rmin, rmax, i);
        
        vbuffer[bid*4+vid] = vec4(p, float(rpid),1);
    }
}
